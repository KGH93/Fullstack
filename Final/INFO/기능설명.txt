http://localhost:8080/articles/new

구현한 기능별 동작 원리 설명

1. 게시판 시스템
동작 원리:
사용자가 글 작성 시 제목, 내용, 이미지를 입력하면 데이터베이스에 저장
글 목록은 최신순으로 정렬되어 표시
글 조회 시 조회수 증가 및 상세 내용 표시
수정/삭제는 작성자만 가능하도록 권한 체크
핵심 기술:
Spring Boot Controller에서 CRUD 작업 처리
Thymeleaf로 동적 페이지 렌더링
파일 업로드 기능으로 이미지 첨부

2. 리뷰 시스템
동작 원리:
상품 구매 후 리뷰 작성 가능
별점(1-5점)과 텍스트, 이미지로 리뷰 구성
리뷰 목록은 최신순/별점순으로 정렬 가능
작성자만 수정/삭제 가능
핵심 기술:
별점 계산 및 평균 평점 표시
이미지 다중 업로드 처리
정렬 기능 구현

3. QnA 시스템
동작 원리:
사용자가 문의글 작성 (제목, 내용, 카테고리)
관리자가 답변 작성 시 상태 변경
답변 완료된 글은 별도 표시
관리자 전용 답변 페이지 제공
핵심 기술:
사용자/관리자 권한 분리
답변 상태 관리 (대기/답변완료)
조건부 렌더링으로 관리자 기능 구분

4. 챗봇 서비스
동작 원리:
사용자가 질문 입력 시 키워드 매칭
미리 정의된 응답 패턴에 따라 답변 생성
상품 정보, 배송, 결제 등 주요 질문에 대한 답변 제공
대화형 인터페이스로 자연스러운 상호작용
핵심 기술:
키워드 기반 응답 시스템
JavaScript로 실시간 대화 처리
질문-답변 매핑 로직
데이터베이스 연동:
각 기능별 테이블 설계 (게시판, 리뷰, QnA)
외래키로 사용자 정보 연동
트랜잭션 처리로 데이터 무결성 보장
보안 처리:
로그인 상태 확인으로 권한 체크
XSS 방지를 위한 입력값 검증
SQL Injection 방지를 위한 PreparedStatement 사용



////////////////////////////////////////////////////////////////////////////////////////////////////////


1. 게시판 시스템
기능: 사용자가 글을 작성하면, 제목, 내용, 이미지가 포함되어 데이터베이스에 저장. 글 목록은 최신순으로 표시되며, 조회 시 조회수가 증가하고 상세 내용을 볼 수 있음.

핵심 기술:

Spring Boot로 CRUD 처리

Thymeleaf로 동적 페이지 렌더링

다중 이미지 업로드 처리

2. 리뷰 시스템
기능: 상품 구매 후 사용자가 평점(1~5점), 텍스트, 이미지를 포함한 리뷰를 작성. 리뷰 목록은 최신순, 별점순으로 정렬 가능하며, 작성자만 수정/삭제 가능.

핵심 기술:

평점 평균 계산

이미지 파일 업로드

리뷰 정렬 기능 (최신순, 평점순)

3. QnA 시스템
기능: 사용자가 문의글을 작성하면, 관리자가 답변을 달고, 답변 상태(대기/답변완료)가 변경됨. 관리자는 전용 페이지에서 관리하며, 비밀글 작성 기능으로 프라이버시 보호.

핵심 기술:

사용자/관리자 권한 분리

답변 상태 관리 (대기/답변완료)

비밀글 작성 및 파일 업로드 기능

4. 챗봇 서비스
기능: 사용자의 질문에 키워드 매칭을 통해 자동 응답. 상품 정보, 배송, 결제 등 다양한 질문에 실시간으로 답변을 제공.

핵심 기술:

키워드 기반 응답 시스템

JavaScript로 실시간 대화 처리

질문-답변 매핑 로직

/////////////////////////////////////////////////////////////////////////////////////////////////////////

구체적인 후기 예시
프로젝트 참여 소감:
"팀 프로젝트에 참여하면서 많은 것을 배울 수 있었습니다. 특히 사용자 관점에서 생각하는 것이 얼마나 중요한지 깨달았습니다."
기술적 성장:
"Spring Boot를 처음 접했는데, 이번 프로젝트를 통해 백엔드 개발의 전체적인 흐름을 이해할 수 있었습니다. 데이터베이스 설계부터 API 구현, 프론트엔드 연동까지 경험할 수 있어서 좋았습니다."
팀워크 경험:
"팀원들과 협업하면서 Git 사용법을 익히고, 코드 리뷰를 통해 더 나은 코드를 작성하는 방법을 배웠습니다. 서로 다른 아이디어를 공유하고 합치는 과정이 흥미로웠습니다."
어려웠던 점과 해결:
"챗봇 구현이 가장 어려웠습니다. 처음에는 단순한 if-else문으로 시작했는데, 점점 복잡해지면서 구조를 다시 설계해야 했습니다. 이를 통해 코드 설계의 중요성을 배웠습니다."
개선하고 싶은 부분:
"시간이 부족해서 구현하지 못한 기능들이 많습니다. 특히 AI 모델을 연동한 지능형 챗봇이나 실시간 알림 기능을 추가하고 싶습니다."
앞으로의 계획:
"이번 프로젝트에서 배운 것을 바탕으로 더 많은 기술을 익히고, 실제 서비스에 적용할 수 있는 수준까지 발전시키고 싶습니다."



이번 프로젝트를 통해 사용자 중심의 개발이 얼마나 중요한지 깨달았고, 팀원들과의 협업을 통해 문제 해결력과 소통 능력을 키울 수 있었습니다. 이 경험을 바탕으로 더 나은 기술을 실무에 적용할 수 있는 역량을 갖추고 싶습니다.
