/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.40
 * Generated at: 2025-05-01 08:00:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import java.sql.*;
import dto.Book;
import dao.BookRepository;
import java.sql.*;

public final class editBook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/dbconn.jsp", Long.valueOf(1746084505161L));
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1745806694047L));
    _jspx_dependants.put("/menu.jsp", Long.valueOf(1746080371338L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("dto.Book");
    _jspx_imports_classes.add("dao.BookRepository");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"./resources/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<title>도서 편집</title>\r\n");
      out.write("<script>\r\n");
      out.write("function deleteConfirm(id) {\r\n");
      out.write("    if (confirm(\"해당 상품을 삭제합니다!!\") == true)\r\n");
      out.write("       location.href = \"./deleteBook.jsp?id=\" + id;\r\n");
      out.write("    else\r\n");
      out.write("       return;\r\n");
      out.write(" }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");

	String edit = request.getParameter("edit");

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container py-4\">\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<header class=\"pb-3 mb-4 border-bottom\">\r\n");
      out.write("      <a href=\"./welcome.jsp\" class=\"d-flex align-items-center text-dark text-decoration-none\">\r\n");
      out.write("        <svg  width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\r\n");
      out.write("           <path d=\"M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L8 2.207l6.646 6.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.707 1.5Z\"/>\r\n");
      out.write("           <path d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6Z\"/>\r\n");
      out.write("        <span class=\"fs-4\">Home</span>\r\n");
      out.write("      </a>\r\n");
      out.write("       <ul class=\"nav nav-pills\">\r\n");
      out.write("        <li class=\"nav-item\"><a href=\"./books.jsp\" class=\"nav-link\" >상품 목록</a></li>\r\n");
      out.write("        <li class =\"nav-item\"><a href = \"./addBook.jsp\" class = \"nav-link\"  >상품 등록</a></li>\r\n");
      out.write("        <li class =\"nav-item\"><a href = \"./editBook.jsp?edit=update\" class = \"nav-link\"  >상품 수정</a></li>\r\n");
      out.write("        <li class =\"nav-item\"><a href = \"./editBook.jsp?edit=delete\" class = \"nav-link\"  >상품 삭제</a></li>\r\n");
      out.write("      </ul>  \r\n");
      out.write("</header>  ");
      out.write("\r\n");
      out.write("     \r\n");
      out.write("   <div class=\"p-5 mb-4 bg-body-tertiary rounded-3\">\r\n");
      out.write("      <div class=\"container-fluid py-5\">\r\n");
      out.write("        <h1 class=\"display-5 fw-bold\">도서 편집</h1>\r\n");
      out.write("        <p class=\"col-md-8 fs-4\">BookEditing</p>      \r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    ");
      out.write("\r\n");
      out.write(" \r\n");

   Connection conn = null;   

   try {
      String url = "jdbc:mysql://localhost:3306/BookMarketDB";
      String user = "root";
      String password = "1234";

      Class.forName("com.mysql.jdbc.Driver");
      conn = DriverManager.getConnection(url, user, password);
      
   } catch (SQLException ex) {
      out.println("데이터베이스 연결이 실패되었습니다.<br>");
      out.println("SQLException: " + ex.getMessage());
   }
      

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"row align-items-md-stretch   text-center\">\r\n");
      out.write("   \r\n");
      out.write("   	");

    PreparedStatement pstmt=null;
    ResultSet rs = null;
    String sql = "select * from book";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    while (rs.next()) {
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"col-md-4\">\r\n");
      out.write("        <div class=\"h-100 p-2\">\r\n");
      out.write("            	<img src=\"./resources/images/");
      out.print(rs.getString("b_filename"));
      out.write("\" style=\"width: 250; height:350\" />   \r\n");
      out.write("            	<p><h5><b>");
      out.print(rs.getString("b_name"));
      out.write("</b></h5>\r\n");
      out.write("            	<p>");
      out.print(rs.getString("b_author"));
      out.write("\r\n");
      out.write("            	<br> ");
      out.print(rs.getString("b_publisher"));
      out.write(' ');
      out.write('|');
      out.write(' ');
      out.print(rs.getString("b_releaseDate"));
      out.write("\r\n");
      out.write("            	<p> ");
      out.print(rs.getString("b_description").substring(0,60));
      out.write("....\r\n");
      out.write("            	<p>");
      out.print(rs.getString("b_unitPrice"));
      out.write("원\r\n");
      out.write("            	\r\n");
      out.write("            	<p>");

            				if (edit.equals("update")){
            	   
      out.write("\r\n");
      out.write("            	<a href=\"./updateBook.jsp?id=");
      out.print(rs.getString("b_id"));
      out.write("\" class=\"btn btn-success\" role=\"button\"> 수정 &raquo;</a>\r\n");
      out.write("            	");

            				}else if(edit.equals("delete")){
            	
      out.write("\r\n");
      out.write("            	<a href=\"#\" onclick=\"deleteConfirm('");
      out.print(rs.getString("b_id"));
      out.write("')\" class=\"btn btn-danger\" role=\"button\">삭제 &raquo;></a>\r\n");
      out.write("            	");

                  			}
                
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write(" 	    </div>\r\n");
      out.write(" 	    ");

         }
      	
      out.write("\r\n");
      out.write(" 	    \r\n");
      out.write("    </div>  \r\n");
      out.write("    ");
      out.write("<footer class=\"pt-3 mt-4 text-body-secondary border-top\">\r\n");
      out.write("       &copy; BooketMarket\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</div>  \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
